package InheritancePro4;

public abstract class Vehicle {
	private String make;
	private String model;
	private int year;
	private String fuelType;
	private double fuelEfficiency;
	
	public Vehicle(String make,String model,int year,String fuelType,double fuelEfficiency) {
		this.make=make;
		this.model=model;
		this.year=year;
		this.fuelType=fuelType;
		this.fuelEfficiency=fuelEfficiency;
		
	}
	public String getMake() {
		return make;
	}
	public String getModel() {
		return model;
	}
	public int getyear() {
		return year;
	}
	public String getFuelType() {
		return fuelType;
	}
	public double getfuelEfficiency() {
		return fuelEfficiency;
	}
	public abstract double calculatesfuelEfficiency();
	public  abstract double calculateDistanceTraveled();
	public  abstract double getMaxSeed();

       
public abstract class Truck extends Vehicle {
	private double cargoCapacity;
	
	public Truck(String make, String model,int year,String fuelType, double fuelEfficiency,double cargoCapacity) {
		super(make,model,year,fuelType, fuelEfficiency);
		this.cargoCapacity=cargoCapacity;
	}
	public double getcargoCapacity() {
		return cargoCapacity;
		
	}
	
	public double calculatefuelEfficiency() {
		return getfuelEfficiency()*(1.0/(1.0 +(getcargoCapacity()/1000.0)));
	}

	public double calculateDistanceTravel() {
		return calculatefuelEfficiency()*getfuelEfficiency();
	}
	
	public double getMaxSpeed() {
		return 80.0;
	}
	
    public abstract class Car extends Vehicle {
	private int numSeats;
	
	public Car(String make, String model,int year,String fuelType, double fuelEfficiency,double cargoCapacity) {
		super(make,model,year,fuelType, fuelEfficiency);
		this.numSeats=numSeats;
	}
	public double getnumSeats() {
		return numSeats;
		
	}
	
	public double calculatefuelEfficiency() {
		return getfuelEfficiency()*(1.0/(1.0 +(getnumSeats()/5.0)));
	}

	public double calculateDistanceTravel() {
		return calculatefuelEfficiency()*getfuelEfficiency();
	}
	
	public double getMaxSpeed() {
		return 120.0;
	}

    public abstract class Motorcycle extends Vehicle {
private double enginDisplacement;
	
	public Motorcycle(String make, String model,int year,String fuelType, double fuelEfficiency,double cargoCapacity) {
		super(make,model,year,fuelType, fuelEfficiency);
		this.enginDisplacement=enginDisplacement;
	}
	public double getenginDisplacement() {
		return enginDisplacement;
		
	}
	
	public double calculatefuelEfficiency() {
		return getfuelEfficiency()*(1.0/(1.0 +(getenginDisplacement()/1000.0)));
	}

	public double calculateDistanceTravel() {
		return calculatefuelEfficiency()*getfuelEfficiency();
	}
	
	public double getMaxSpeed() {
		return 80.0;
	}
	
     public static void main(String[] args) {
		Truck truck=new Truck("Tatra","Tatra 810 4x4",2020,"GASOLINE",8.112,4.5);
		Car car=new Car("Volkswagen","Virtus",2019,"HYBRID",6.123,8);
		Motorcycle motorcycle= new Motorcycle("Massimo Motor","Warrior200",2018,"GASOLINE",2.1);
		
		System.out.println("Car Model :"+car .getModel());
		System.out.println("Fuel Efficiency:"+car .calculatefuelEfficiency()+"mpg");
		System.out.println("Distance Traveled: "+ car .calculateDistanceTraveled()+ "miles");
		System.out.println("Max Speed :" +car .getMaxSpeed() + "mph\n");
		
		System.out.println("Truck Model :"+truck.getModel());
		System.out.println("Fuel Efficiency:"+truck.calculatefuelEfficiency()+"mpg");
		System.out.println("Distance Traveled: "+ truck.calculateDistanceTraveled()+ "miles");
		System.out.println("Max Speed :" +truck.getMaxSpeed() + "mph\n");
		
		System.out.println("Motorcycle Model :"+motorcycle.getModel());
		System.out.println("Fuel Efficiency:"+motorcycle.calculatefuelEfficiency()+"mpg");
		System.out.println("Distance Traveled: "+ motorcycle.calculateDistanceTraveled()+ "miles");
		System.out.println("Max Speed :" +motorcycle.getMaxSpeed() + "mph\n");
		


	

}


}

	
	

}
